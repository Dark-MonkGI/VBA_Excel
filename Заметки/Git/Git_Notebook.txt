git clone <ссылка> - склонировать
git add .  <файл или папка> - добавить в индексацию файлв
git commit -m "<название коммита>" - закоммитить изменения локально
git push origin <название ветки> - запушить изменения
git pull origin <название ветки> - обновить локальнкю ветку(обязательно надо в ней находиться или потом не разберешься)
git checkout <название ветки> - переключиться на ветку
git checkout -b <название новой ветки> - создать ветку и переключиться на нее



https://docs.microsoft.com/ru-ru/learn/paths/visual-studio/

---------------------------------------------------------------------------------------------------------------------------------------------------------------
git remote -v смотрим подключения
git branch -a смотрим на все ветки 
git remote add origin git@github.com:Dark-MonkGI/Learning_C_Sharp.git - подключаемся, 
git clone git@github.com:Dark-MonkGI/Learning_C_Sharp.git <имя папки которую надо создать локально> - копируем гит



------------------------------------------------------------------------------------
git status
git add . - добавить НОВЫЕ и все файлы в "отслеживаемые"
git commit -m 'текст коммита'  - добавит новый коммит сразу с текстом
git commit -am 'текст коммита'  - добавит новый коммит сразу с текстом и изменнеия в файлах запишет


git push --set-upstream origin <name brange> -сздает новую ветку на удаленном сервере и туда пушит нашу ветку
git push -u origin <name brange> - аналогично тому что выше, создает ветку и в нее пушит

git pull       - загрузить изменнения из сервака на локальную машину из той ветки где мы находмся
git pull --all - В обновить локальные ветки, которые отслеживают удаленные ветки:
git fetch      - подгрузить обновления из реаозитория включая новые ветки про которые мы незнаем
------------------------------------------------------------------------------------
Востановление истории: 
git log
git log --oneline - история в полном и кратком видел всех комитов
git reflog        -история комитов и удалений коммиитов

git reset <хеш лога> - востановить коммит нужный (просто убирает лишние сохранения в истории файлы остаюься как были)
git revert <хеш лога> - отменяет дейсвия этого коммита( убирает последствия тоесть..востановил удаленный файл)
git restore <название файла>  - сброс состояния файла на состояние последнено коммита 
------------------------------------------------------------------------------------
Ветки: ветки по умолчанию обычно создаються от мастер ветки.

git branch - проверить наличие веток 
git branch <name branch> - создать новую ветку 
git branch <name branch> <name start branch>- создать новую ветку из определенной ветки если их несколько
git checkout <name branch> - сменить ветку, переключиться на другую 
git checkout -b <name branch> - создать новую ветку и сразу на нее переключиться













